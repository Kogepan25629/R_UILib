R_UILib	   Version 0.6.2

各クラスと関数の説明

RUI クラス
定数
                    int    RIGHT
                    int    LEFT
                    int    UP
                    int    DOWN
                    int    HOLD

関数                void R_UILibInit()

                    説明   R_UILibの初期化を行う最初に一回実行する必要がある	


                    void UptadeMouseState()

                    説明   マウス座標の取得やクリック判定を行う
                           基本毎フレームの最初に呼び出す関数


RUI_Button クラス
説明                基本的なボタンの用のクラス
                    インスタンス化して使用

コンストラクタ引数  bool   matchSizeToString    ボタンのサイズを文字列の大きさにあわせるかどうか
                    bool   onCursorHighlight    ボタン上にカーソルがある時ハイライトするかどうか
                    bool   onCursorChangeImage  ボタン上にカーソルがある時GrHandle2に設定された画像を表示するかどうか

フィールド          変数
                    int    X1                   ボタン左上のX座標                                       初期値 -1
                    int    X2                   ボタン右下のX座標                                       初期値 -1
                    int    Y1                   ボタン左上のY座標                                       初期値 -1
                    int    Y2                   ボタン右下のY座標                                       初期値 -1
                    int    GrHandle             DXLibのグラフィックハンドル                             初期値 -1
                    int    GrHandle2            Mode2,4用のグラフィックハンドル                         初期値 -1
                    int    FontHandle           DXLibのフォントハンドル                                 初期値 -1
                    string Str                  ボタンに表示する文字列                                  初期値 ""
                    uint   StrColor             ボタンに表示する文字列の色                              初期値 DX.GetColor(255, 255, 255)


関数                int SetString(string str)
                    int SetString(string str, int fontHandle)

                    引数   string str        Strに設定する文字列
                           int fontHandle    FontHandleに設定する文字列

                    戻り値   0 : 成功
                            -1 : 失敗

                    説明    ボタンに表示する文字列を設定する
                            FontHandleが設定されておらず、引数にfonthandleを指定しなかった場合は-1を返す


                    void SetPoint(int x1, int y1)
                    void SetPoint(int x1, int y1, int x1, int y2)

                    引数   int x1    ボタンの左上座標
                           int y1    ボタンの左上座標
                           int x2    ボタンの右下座標
                           int y2    ボタンの右下座標

                    説明   ボタンの座標をまとめて設定できる


                    int Show()

                    引数   なし
                     
                    説明   画像と文字列を描画する
                           座標が設定されていない場合は-1を返す
                           matchSizeToStringがtrueかつ文字列が設定されていない場合は-1を返す
                           onCursorChangeImageがtrueかつGrHandle2が設定されていない場合は描画されず-1を返す


                    bool DetectMouseClick(int LeftRight, int UpDown)

                    引数   int LeftRight     RUI.RIGHT  RUI.LEFT のどちらかを指定
                           int UpDown        RUI.DOWN  RUI.UP  RUI.HOLD のどれかを指定

                    説明   ボタンがマウスクリックされた場合trueされていない場合はfalseを返す
                           LeftRightには右クリックと左クリックのどちらで判定するか指定
                           UpDownにDOWNを指定した場合はクリックダウンした瞬間、UPの場合はクリックアップした瞬間、HOLDの場合はクリックされているときにtrueを返す

RUI_ButtonManager クラス
説明                複数のボタンをグループ化し、まとめて管理する。このクラスとRUI_Managerクラスを使用することで、重なったボタンの1番上のみクリック判定をするなどが可能になる。
                    同じRUI_ButtonManagerクラスのインスタンスに追加したボタンは同じ優先度となる。

RUI_Manager クラス
説明               複数のRUI_ButtonManagerをグループ化し、まとめて管理する。このクラスを使用することで、重なったボタンの1番上のみクリック判定をするなどが可能になる。
                   このクラスのインスタンスに追加されたRUI_ButtonManagerクラスのインスタンスは優先順位がつけられ優先順位が高いものから判定が行われる。